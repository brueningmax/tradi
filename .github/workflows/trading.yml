name: TraderAgent Hourly Trading

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      trading_mode:
        description: "Trading mode"
        required: true
        default: "paper"
        type: choice
        options:
          - paper
          - live
      use_volume:
        description: "Use volume analysis"
        required: true
        default: true
        type: boolean

env:
  PYTHON_VERSION: "3.11"
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  trade:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: 📦 Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔍 Verify API key exists
        shell: bash
        run: |
          if [ -z "${OPENAI_API_KEY}" ]; then
            echo "❌ OPENAI_API_KEY secret not configured"
            exit 1
          fi
          echo "✅ OpenAI API key is configured"

      - name: 📊 Run trading bot
        id: trading
        shell: bash
        run: |
          echo "🤖 Starting TraderAgent execution..."
          echo "📅 Execution time: $(date -u)"
          echo "⏰ UTC Time: $(date -u '+%Y-%m-%d %H:%M:%S')"

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TRADING_MODE="${{ github.event.inputs.trading_mode }}"
            USE_VOLUME="${{ github.event.inputs.use_volume }}"
          else
            TRADING_MODE="paper"
            USE_VOLUME="true"
          fi

          echo "🎯 Trading mode: ${TRADING_MODE}"
          echo "📈 Volume analysis: ${USE_VOLUME}"

          ARGS=""
          if [ "${TRADING_MODE}" = "paper" ]; then
            ARGS="${ARGS} --paper"
          else
            ARGS="${ARGS} --live"
          fi
          if [ "${USE_VOLUME}" = "false" ]; then
            ARGS="${ARGS} --no-volume"
          fi

          echo "🚀 Command: python main.py ${ARGS}"

          {
            echo "execution_time=$(date -u)"
            echo "trading_mode=${TRADING_MODE}"
            echo "use_volume=${USE_VOLUME}"
          } >> "$GITHUB_OUTPUT"

          if [ "${TRADING_MODE}" = "live" ]; then
            echo "⚠️ LIVE TRADING MODE - USING REAL MONEY!"
            echo "YES" | python main.py ${ARGS} 2>&1 | tee trading_output.log
          else
            python main.py ${ARGS} 2>&1 | tee trading_output.log
          fi

          echo "execution_status=success" >> "$GITHUB_OUTPUT"

      - name: 💾 Commit updated balance
        if: success()
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "TraderAgent Bot"

          if [ ! -f data/paper_balance.json ]; then
            echo "ℹ️ data/paper_balance.json does not exist; nothing to commit."
            exit 0
          fi

          if git diff --quiet -- data/paper_balance.json; then
            echo "📊 No balance changes to commit"
          else
            echo "💾 Committing updated balance..."
            git add data/paper_balance.json
            git commit -m "Update trading balance - $(date -u '+%Y-%m-%d %H:%M:%S')"
            git push origin main
            echo "✅ Balance successfully persisted to repository"
          fi

      # ------------ SAFER SUMMARY WRITES (no heredocs to $GITHUB_STEP_SUMMARY) ------------

      - name: 📈 Display trading results (header)
        if: always()
        shell: bash
        run: |
          {
            echo "## 🤖 TraderAgent Execution Report"
            echo
            echo "**📅 Execution Time:** $(date -u)"
            echo "**🎯 Trading Mode:** ${{ steps.trading.outputs.trading_mode }}"
            echo "**📈 Volume Analysis:** ${{ steps.trading.outputs.use_volume }}"
            echo "**⏱️ Workflow:** ${{ github.event_name }}"
            echo
          } >> "$GITHUB_STEP_SUMMARY"

      - name: 📊 Append trading output
        if: always()
        shell: bash
        run: |
          if [ -f "trading_output.log" ]; then
            {
              echo "### 📊 Trading Output"
              echo '```'
              tail -50 trading_output.log
              echo '```'
              echo
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: 💰 Append current balance
        if: always()
        shell: bash
        run: |
          if [ -f "data/paper_balance.json" ]; then
            {
              echo "### 💰 Current Balance"
              echo '```'
              python scripts/display_balance.py
              echo '```'
              echo
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: 📋 Append recent trading history
        if: always()
        shell: bash
        run: |
          if [ -f "data/paper_balance.json" ]; then
            {
              echo "### 📋 Recent Trading History"
              echo '```'
              python scripts/display_history.py
              echo '```'
              echo
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: 📤 Upload trading logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trading-logs-${{ github.run_number }}
          path: |
            trading_output.log
            data/paper_balance.json
          retention-days: 30

      - name: ❌ Handle execution failure
        if: failure()
        shell: bash
        run: |
          {
            echo "## ❌ Trading Execution Failed"
            echo
            echo "**📅 Failed at:** $(date -u)"
            echo "**🎯 Trading Mode:** ${{ steps.trading.outputs.trading_mode }}"
            echo
            echo "### 🔍 Error Details"
          } >> "$GITHUB_STEP_SUMMARY"

          if [ -f "trading_output.log" ]; then
            {
              echo '```'
              tail -20 trading_output.log
              echo '```'
            } >> "$GITHUB_STEP_SUMMARY"
          fi
